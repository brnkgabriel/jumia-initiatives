{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://webpack-typescript/./src/core/constants.ts","webpack://webpack-typescript/./src/core/util.ts","webpack://webpack-typescript/./src/index.ts"],"sourcesContent":["import { IDBConfig, IConstants } from \"./interfaces/others\";\r\n\r\nexport const config:IDBConfig = {\r\n  apiKey: \"AIzaSyAA8dQEt-yZnDyY3Lra8lndRJ3LWNYVW0o\",\r\n  authDomain: \"jumia-c15a3.firebaseapp.com\",\r\n  databaseURL: \"https://jumia-c15a3.firebaseio.com\",\r\n  projectId: \"jumia-c15a3\",\r\n  storageBucket: \"jumia-c15a3.appspot.com\",\r\n  messagingSenderId: \"295115190934\",\r\n  appId: \"1:295115190934:web:de0b33b53a514c3c\"\r\n}\r\n\r\nexport const constants:IConstants = {\r\n  SHEETNAME: \"campaign_calendar\",\r\n  NAME: \"Campaign Calendar\",\r\n  TANDC: \"Campaign Calendar T & Cs\",\r\n  FOCUS: \"focus\",\r\n  BUILD: \"build\",\r\n  RESET: \"reset\",\r\n  TABLISTENER: \"tab listener\",\r\n  FIRSTTAB: \"first tab\",\r\n  INSESSION: \"in session\",\r\n  AFTERSESSION: \"after session\",\r\n  BTWORB4SESSION: \"between or before session\",\r\n  TIMESLOTSTODISPLAY: 12,\r\n  SKUROWCLASS: \".-sku_row\",\r\n  LIVECLASS: \"-live\",\r\n  OOSCLASS: \"-oos\",\r\n  TABCLASS: \"-tab\"\r\n}\r\n\r\nexport const fxn = {\r\n  idQuery: (query: string) => \"#initiative \" + query,\r\n  timeQuery: (time: number) => '.-sku_row[data-time=\"' + time + '\"]',\r\n  tabQuery: (time: number) => '.-tab[data-time=\"' + time + '\"]'\r\n}","import { IDomain, IRemoteConfig, IRemoteData } from \"./interfaces/config\";\r\nimport { IConstants, IGetDataOptions, IPastAndFutureTimes } from \"./interfaces/others\";\r\nimport { constants, fxn } from \"./constants\";\r\nimport { ICampaignCalendar } from \"./interfaces/data\";\r\n\r\ntype TypeOrNull<T> = T | null;\r\n\r\nexport class Util {\r\n  private remoteData:IRemoteData;\r\n  private timeInterval:number = 0;\r\n  private minutesDuration: number;\r\n  private currency: string;\r\n  private config: IRemoteConfig;\r\n  private domain: IDomain;\r\n  private el;\r\n  private all;\r\n  private pad;\r\n  private endTime;\r\n  private skuRow;\r\n  private skuRows;\r\n  private tab;\r\n  private live;\r\n  private skuID;\r\n  private capitalize;\r\n  private oosByTime;\r\n  private isItMyTime;\r\n  private isPast;\r\n  private isFuture;\r\n  private digit;\r\n  private isATab;\r\n  private midnight;\r\n\r\n  constructor(remoteData: IRemoteData) {\r\n    this.remoteData = remoteData\r\n    this.minutesDuration = Number(this.remoteData.config.minute_duration_campaign_calendar)\r\n    this.currency = this.remoteData.config.currency\r\n    this.config = this.remoteData.config\r\n    this.domain = this.remoteData.domain\r\n\r\n    this.el = (query: string) => document.querySelector(fxn.idQuery(query))\r\n    this.all = (query: string) => document.querySelectorAll(fxn.idQuery(query))\r\n    this.pad = (time: number) => time.toString().length == 1 ? \"0\" + time : time\r\n    this.endTime = (time: number) => time + (this.minutesDuration * 60 * 1000)\r\n    this.skuRow = (time: number) => this.el(fxn.timeQuery(time))\r\n    this.skuRows = () => this.all(constants.SKUROWCLASS)\r\n    this.tab = (time: number) => this.el(fxn.tabQuery(time))\r\n    this.live = (list: HTMLElement[], action: \"add\" | \"remove\") => list.forEach(each => each.classList[action](constants.LIVECLASS))\r\n    this.skuID = (sku: ICampaignCalendar) => sku.name + \"-\" + (+new Date(sku.time))\r\n    this.capitalize = (str: string) => str[0].toUpperCase() + str.slice(1)\r\n    this.oosByTime = (times: number[]) => times.map(time => this.skuRow(time)?.classList.add(constants.OOSCLASS))\r\n    this.isItMyTime = (sku: ICampaignCalendar, time: number) => +new Date(sku.time) === time\r\n    this.isPast = (time: number) => Date.now() > time && Date.now() > this.endTime(time)\r\n    this.isFuture = (time: number, past: number[]) => past.indexOf(time) === -1\r\n    this.digit = (num: number, unit: string) => num !== 0 ? this.pad(num) + unit : \"\"\r\n    this.isATab = (el: HTMLElement) => el.classList.contains(constants.TABCLASS)\r\n    this.midnight = (time: number | string) => +new Date(time).setHours(0, 0, 0, 0)\r\n  }\r\n\r\n  getData(initiative: string) {\r\n    const list = this.remoteData.json_list\r\n    return list.filter((datum) => datum.initiative === initiative)\r\n  }\r\n\r\n  times(skus:ICampaignCalendar[]) {\r\n    const times = skus.map(sku => this.midnight(sku.time))\r\n    const uniqueTimes = Array.from(new Set(times))\r\n    return uniqueTimes.sort((a, b) => a - b)\r\n  }\r\n\r\n  group(skuList: ICampaignCalendar[], times: number[]) {\r\n    return times.map(time => {\r\n      const skus = skuList.filter(sku => this.isItMyTime(sku, time))\r\n      return { time, skus }\r\n    })\r\n  }\r\n\r\n  pastAndFutureTimes(times: number[]) {\r\n    const past = times.filter(this.isPast)\r\n    const future = times.filter(time => this.isFuture(time, past))\r\n    return { past, future }\r\n  }\r\n\r\n  additionalTimes(pastFutureTimes: IPastAndFutureTimes) {\r\n    const future = pastFutureTimes.future\r\n    const past = pastFutureTimes.past\r\n    const addTimes = this.addition(future, past)\r\n    return future.length < constants.TIMESLOTSTODISPLAY ? addTimes : []\r\n  }\r\n\r\n  addition(future: number[], past: number[]) {\r\n    const additional = []\r\n    const remaining = constants.TIMESLOTSTODISPLAY - future.length\r\n\r\n    for (let i = remaining; i > -1; i--) {\r\n      const endIdx = past.length - 1\r\n      const idx = endIdx - i\r\n      additional.push(past[idx])\r\n    }\r\n    return additional\r\n  }\r\n}","import { config, constants } from \"./core/constants\";\r\nimport { IRemoteConfig, IRemoteData } from \"./core/interfaces/config\";\r\nimport { ICampaignCalendar, MarketingTypes } from \"./core/interfaces/data\";\r\nimport { Util } from \"./core/util\";\r\n\r\nconst wind = window as any\r\nconst fbox = wind.Featurebox({ config })\r\nlet util: Util\r\n\r\nfbox.pubsub.subscribe(fbox.FETCHED_DATA, (data: any) => {\r\n  const remoteData:IRemoteData = data as IRemoteData\r\n  util = new Util(remoteData)\r\n  const calendar:any[] = util.getData(constants.NAME)\r\n  const times: number[] = util.times(calendar)\r\n  console.log(\"times\", times)\r\n})"],"names":["fxn","query","Util","constructor","remoteData","timeInterval","this","minutesDuration","Number","config","minute_duration_campaign_calendar","currency","domain","el","document","querySelector","all","querySelectorAll","pad","time","toString","length","endTime","skuRow","skuRows","tab","live","list","action","forEach","each","classList","skuID","sku","name","Date","capitalize","str","toUpperCase","slice","oosByTime","times","map","add","isItMyTime","isPast","now","isFuture","past","indexOf","digit","num","unit","isATab","contains","midnight","setHours","getData","initiative","json_list","filter","datum","skus","Array","from","Set","sort","a","b","group","skuList","pastAndFutureTimes","future","additionalTimes","pastFutureTimes","addTimes","addition","additional","i","idx","push","fbox","window","Featurebox","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","util","pubsub","subscribe","FETCHED_DATA","data","calendar","console","log"],"sourceRoot":""}